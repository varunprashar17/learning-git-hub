set "server=Sqlwebs01"
set "dataBase=AMCWebSite"
set "websiteSchema=AMCWebSite"
set "catalogSchema=OnlineCatalog"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o Theatres.csv -Q "SET NOCOUNT ON SELECT [TheatreNumber],[TheatreWebURLSuffixText],[Latitude],[Longitude] FROM [%websiteSchema%].[amcweb].[Theatre] WHERE [TheatreWebURLSuffixText] IS NOT NULL AND [TheatreWebURLSuffixText] != '' SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o InternalReleases.csv -Q "SET NOCOUNT ON SELECT [InternalReleaseID] FROM [%websiteSchema%].[amcweb].[AMCInternalRelease] SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o Movies.csv -Q "SET NOCOUNT ON SELECT [TitleID], [TitleWebUrlSuffixText] FROM [%websiteSchema%].[amcweb].[Title] SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o MovieRatings.csv -Q "SET NOCOUNT ON SELECT TitleId as MovieId FROM amcweb.title with (nolock) WHERE RottenTomatoesID IS NOT NULL AND RottenTomatoesCriticsRatingID = 2 AND (RottenTomatoesCriticsScore IS NOT NULL OR IMDBUserRatingNumber IS NOT NULL) SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o Showtimes.csv -Q "SET NOCOUNT ON SELECT [BoxOfficeScheduleID], [TheatreNumber], t.[TitleID] FROM [%catalogSchema%].[Performance].[BoxOfficeSchedule] bos (NOLOCK) LEFT JOIN [%websiteSchema%].[amcweb].[AMCInternalRelease] ir (NOLOCK) ON bos.InternalReleaseID = ir.InternalReleaseID LEFT JOIN [%websiteSchema%].[amcweb].[Title] t (NOLOCK) ON ir.TitleID = t.TitleID where ShowDateTime >= Getdate() AND bos.CanceledIndicator = 0 AND  ir.ActiveIndicator = 1 AND  bos.RemoteTicketIndicator = 1 SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o TheatreAttributes.csv -Q "SET NOCOUNT ON SELECT [TheatreNumber], [TheatreAttributeCode] FROM [%websiteSchema%].[amcweb].[TheatreAttributeTheatre] tat (NOLOCK) LEFT JOIN [%websiteSchema%].[amcweb].[TheatreAttribute] ta (NOLOCK) ON tat.TheatreAttributeID = ta.TheatreAttributeID SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o TicketSkus.csv -Q "SET NOCOUNT ON SELECT top 2000 T.TheatreNumber as ticketTheatreId, CASE WHEN T.ReservedSeatingIndicator = 1 THEN 'TICKET-RS-' + CONVERT(VARCHAR,T.BoxOfficeScheduleID) + '-ADULT' ELSE 'TICKET-GA-' + CONVERT(VARCHAR,T.BoxOfficeScheduleID) + '-ADULT' END AS ticketSKU,  T.AdultTicketPrice, t.AdultTicketTaxAmount, AIR.InternalReleaseID ticketIRId, AIR.TitleID ticketTitleId From [%catalogSchema%].[Performance].[BoxOfficeSchedule] T JOIN amcweb.AMCInternalRelease AIR On AIR.InternalReleaseID = T.InternalReleaseID JOIN amcweb.Title TT ON TT.TitleID = AIR.TitleID where t.ShowDateTime > GETDATE() and T.TheatreNumber in (38,610, 903, 904, 905) ORDER BY NEWID() SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o CastCrew.csv -Q "SET NOCOUNT ON SELECT [CastCrewPersonID] FROM [%websiteSchema%].[amcweb].[CastCrewPerson] SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o Accounts.csv -Q "SET NOCOUNT ON SELECT top 64000 a.AccountID as AccountId, (SELECT top 1 SecurityTokenHAshCode FROM amcWeb.AccountSecurity s where s.AccountID = a.AccountID and s.VendorID = 1 order by SecurityExpirationDate desc) as authToken, p.EmailAddressText as userEmail,  p.LoyaltyAccountID as loyaltyId, la.LoyaltyAccountCardNumber as cardNumber FROM amcweb.Account a JOIN amcweb.SubscriberProfile p  ON p.SubscriberProfileID = a.SubscriberProfileID JOIN amcstubs.LoyaltyAccount la ON la.LoyaltyAccountID = p.LoyaltyAccountID WHERE a.ActiveIndicator = 1 and la.CreationDate > dateadd(YEAR,-1,GETDATE()) SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o AuthAccounts.csv -Q "SET NOCOUNT ON SELECT top 5000 * FROM(SELECT TOP 10000 AccountID, (SELECT top 1 SecurityTokenHAshCode FROM amcWeb.AccountSecurity s where s.AccountID = a.AccountID and s.VendorID = 1 and s.SecurityTokenHashCode IS NOT NULL order by SecurityExpirationDate desc) as authToken, p.EmailAddressText as email FROM amcweb.Account a JOIN amcweb.SubscriberProfile p ON p.SubscriberProfileID = a.SubscriberProfileID WHERE p.EmailAddressText LIKE 'Jmeter-Accounts%%') as t WHERE t.authToken is not null SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o Orders.csv -Q "SET NOCOUNT ON SELECT TOP 25000	O.AccountID,O.OrderID,O.OrderGUID FROM [amcwebsales].[Order] O WITH (NOLOCK) JOIN [amcwebsales].[OrderItem] oi WITH(NOLOCK) ON O.OrderID = OI.OrderID JOIN [amcweb].[Account] a WITH(NOLOCK) ON O.AccountID = a.AccountID WHERE oi.OrderItemStatusId in  (SELECT OrderItemStatusId FROM amcwebsales.OrderItemStatus WITH (NOLOCK) WHERE OrderItemStatusName IN ('Fulfilled','Refunded')) AND O.AccountID IS NOT NULL AND a.ActiveIndicator = 1 AND a.CreationDate > dateadd(YEAR,-1,GETDATE()) GROUP BY O.AccountID ,O.OrderID ,O.OrderGUID HAVING SUM(OI.OrderItemQuantity) > 0 SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o Promotions.csv -Q "SET NOCOUNT ON SELECT [PromotionID] FROM [%websiteSchema%].[amcweb].[Promotion] SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o CallToActions.csv -Q "SET NOCOUNT ON SELECT [CallToActionID] FROM [%websiteSchema%].[amcweb].[CallToAction] SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o ProductSubscriptions.csv -Q "SET NOCOUNT ON SELECT A.AccountID, PSA.ProductSubscriptionAccountID,PSA.TenderMerchantSubscriptionID,SP.EmailAddressText,LA.LoyaltyAccountID,LA.LoyaltyAccountCardNumber FROM [AMCWebsite].[amcsubscription].[ProductSubscriptionAccount] PSA WITH (NOLOCK) LEFT JOIN [AMCWebsite].[amcweb].Account A WITH (NOLOCK) on PSA.SubscriberProfileID = A.SubscriberProfileID LEFT JOIN [AMCWebsite].[amcweb].SubscriberProfile SP WITH (NOLOCK) on PSA.SubscriberProfileID = SP.SubscriberProfileID INNER JOIN [AMCWebsite].[amcstubs].LoyaltyAccount LA WITH (NOLOCK) on SP.LoyaltyAccountID = LA.LoyaltyAccountID WHERE PSA.TenderMerchantSubscriptionID IS NOT NULL AND SP.EmailAddressText IS NOT NULL AND LA.LoyaltyAccountID IS NOT NULL AND LA.LoyaltyAccountCardNumber IS NOT NULL SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o SeatingLayouts.csv -Q "SET NOCOUNT ON SELECT BOS.[RadiantPerformanceNumber],BOS.[TheatreNumber]  FROM [AMCWebsite].[amcwebsales].AuditoriumSeat S WITH(NOLOCK) JOIN [AMCWebsite].[amcwebsales].AuditoriumSeatType ST WITH(NOLOCK) ON S.AuditoriumSeatTypeID = ST.AuditoriumSeatTypeID JOIN [AMCWebsite].[amcwebsales].AuditoriumSeatTier STIER WITH(NOLOCK) ON S.AuditoriumSeatTierID = STIER.AuditoriumSeatTierID JOIN [%catalogSchema%].[Performance].[BoxOfficeSchedule] BOS WITH(NOLOCK) ON BOS.TheatreNumber = S.TheatreNumber WHERE S.ActiveIndicator = 1 AND S.TheatreNumber  IN(SELECT TheatreNumber FROM %websiteSchema%.amcwebsales.TheatreMainServer WITH(NOLOCK)) AND S.AuditoriumLayoutID = BOS.AuditoriumLayoutID AND S.AuditoriumSeatTypeID = 1 AND BOS.ShowDateTime > GetDate() GROUP BY BOS.[RadiantPerformanceNumber],BOS.[TheatreNumber]   SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o RefundableOrders.csv -Q "SET NOCOUNT ON DECLARE @window DATETIME = DATEADD(day, -90, GETDATE()) SELECT DISTINCT TOP 64000 O.OrderGUID FROM [AMCWebsite].[amcwebsales].[Order] O JOIN [AMCWebsite].[amcwebsales].[OrderItem] OI WITH(NOLOCK) ON O.OrderID = OI.OrderID WHERE O.OrderStatusID = 4 AND OI.WebProductID = 1 AND O.VendorID = 1 AND O.CreationDate > @window SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o ReminderAccounts.csv -Q "SET NOCOUNT ON SELECT TOP 18000 AT.AccountID ,AT.TitleID FROM [amcweb].[AccountTitle] AT WITH (NOLOCK) JOIN [amcwebsales].[Order] O WITH (NOLOCK) ON AT.AccountID = O.AccountID JOIN [amcwebsales].[OrderItem] oi WITH(NOLOCK) ON O.OrderID = OI.OrderID WHERE oi.OrderItemStatusId in  (SELECT OrderItemStatusId FROM amcwebsales.OrderItemStatus WITH (NOLOCK) WHERE OrderItemStatusName IN ('Fulfilled','Refunded')) GROUP BY AT.AccountID ,AT.TitleID HAVING SUM(OI.OrderItemQuantity) > 0 SET NOCOUNT OFF"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o NonVodAccounts.csv -Q "set nocount on select distinct top 1000 [Account].[AccountID], [AccountSecurity].[SecurityTokenHashCode], [WebVendor].[VendorAuthorizationGUID] from [amcweb].[Account] (nolock) inner join [amcweb].[AccountSecurity] (nolock) on [AccountSecurity].[AccountID] = [Account].[AccountID] inner join [amcweb].[WebVendor] (nolock) on [WebVendor].[VendorID] = [AccountSecurity].[VendorID] and [Account].[DigitalRetailPartnerAccountID] is null inner join [amcweb].[WebVendorAuthorization] (nolock) on [WebVendor].[VendorID] = [AccountSecurity].[VendorID] inner join [amcweb].[WebApplicationEndPoint] (nolock) on [WebVendorAuthorization].[WebApplicationEndPointID] = [WebApplicationEndPoint].[WebApplicationEndPointID] where [DigitalRetailPartnerAccountID] is null and [WebApplicationEndPoint].[WebApplicationEndPointName] like 'RetrieveOnDemandSessionForAmcAccount' and [AccountSecurity].[SecurityExpirationDate] > CURRENT_TIMESTAMP order by [Account].[AccountID] desc"

sqlcmd -S %server% -d %dataBase% -s "," -h -1 -W -o AccountsWithAuthTokens.csv -Q "SET NOCOUNT ON SELECT top 64000 a.AccountID as AccountId, auth.SecurityTokenHashCode as authToken, p.EmailAddressText as userEmail,  p.LoyaltyAccountID as loyaltyId, la.LoyaltyAccountCardNumber as cardNumber FROM amcweb.Account a JOIN (SELECT AccountID, Max(SecurityTokenHashCode) as SecurityTokenHashCode from amcweb.AccountSecurity WHERE SecurityExpirationDate > GETDATE() AND VendorID = 1 GROUP by AccountID) auth on auth.AccountID = a.AccountID JOIN amcweb.SubscriberProfile p  ON p.SubscriberProfileID = a.SubscriberProfileID JOIN amcstubs.LoyaltyAccount la ON la.LoyaltyAccountID = p.LoyaltyAccountID WHERE a.ActiveIndicator = 1 and la.CreationDate > dateadd(YEAR,-1,GETDATE()) SET NOCOUNT OFF"